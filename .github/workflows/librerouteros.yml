#========================================================================================================================
# Description: Automatically Build OpenWrt for Amlogic S9xxx STB
# Function: Workflows for Build Amlogic S9xxx STB
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#========================================================================================================================

name: Build LibreRouter

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: '0 17 * * *'

env:
  REPO_URL: https://gitlab.com/librerouter/librerouteros.git
  REPO_BRANCH: librerouter-1.4
  FEEDS_CONF: router-config/librerouteros-master/feeds.conf.default
  CONFIG_FILE: router-config/librerouteros-master/.config
  DIY_P1_SH: router-config/librerouteros-master/diy-part1.sh
  DIY_P2_SH: router-config/librerouteros-master/diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_ARMVIRT: false
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  DELETE_RELEASE: true
  DELETE_ARTIFACTS: true
  RECENT_LASTEST: 3
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/adisubagja/openwrt_header/master/get)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone https://github.com/ophub/amlogic-s9xxx-openwrt ophub
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH librerouteros
        ln -sf /workdir/librerouteros $GITHUB_WORKSPACE/librerouteros

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && cp -f $FEEDS_CONF librerouteros/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd librerouteros
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd librerouteros && ./scripts/feeds update -a

    - name: Install feeds
      run: cd librerouteros && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files librerouteros/files
        [ -e $CONFIG_FILE ] && cp -f $CONFIG_FILE librerouteros/.config
        chmod +x $DIY_P2_SH
        cd librerouteros
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Copy Config
      run: cd librerouteros && cp configs/default_config .config

    - name: Revert some not libreos
      run: cd librerouteros && patch -p1 < configs/revert-cmdline-config.patch

    - name: Download package
      id: package
      run: |
        cd librerouteros
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: SSH connection to Actions @ Ctrl+C to enter, Ctrl+D to exit
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Compile the firmware
      id: compile
      run: |
        cd librerouteros
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload librerouteros bin directory to Actions
      uses: actions/upload-artifact@v2
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: librerouteros_bin_armvirt_64_${{ env.FILE_DATE }}
        path: librerouteros/bin
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Organize armvirt files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_ARMVIRT == 'true' && !cancelled()
      run: |
        cd librerouteros/bin/targets/*/*
        rm -rf packages
        echo "TMPFILEPATH=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload armvirt directory to Actions
      uses: actions/upload-artifact@v2
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_ARMVIRT == 'true' && !cancelled()
      with:
        name: librerouteros_armvirt_64_${{ env.FILE_DATE }}
        path: ${{ env.TMPFILEPATH }}
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Build librerouteros firmware
      if: steps.compile.outputs.status == 'success' && !cancelled()
      id: build
      run: |
        [ -d librerouteros-armvirt ] || mkdir -p librerouteros-armvirt
        cp -f librerouteros/bin/targets/*/*/*.tar.gz librerouteros-armvirt/ && sync
        sudo chmod +x make
        sudo ./make -d -b s905x3_s905x2_s905x_s905d_s922x_s912 -k 5.10.36.TF_5.4.118
        echo "PACKAGED_OUTPUTPATH=${PWD}/out" >> $GITHUB_ENV
        echo "PACKAGED_OUTPUTDATE=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload artifact to Actions
      uses: kittaakos/upload-artifact-as-is@master
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}/

    - name: Upload librerouteros Firmware to cowtransfer
      if: steps.build.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${{ env.PACKAGED_OUTPUTPATH }}/{librerouteros_s9xxx_*,librerouteros_n1_*} 2>&1 | tee cowtransfer.log
        echo "COW_URL=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV

    - name: Upload librerouteros Firmware to WeTransfer
      if: steps.build.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ env.PACKAGED_OUTPUTPATH }}/{librerouteros_s9xxx_*,librerouteros_n1_*} 2>&1 | tee wetransfer.log
        echo "WET_URL=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV

    - name: Upload librerouteros Firmware to Release
      uses: softprops/action-gh-release@v1
      if: steps.build.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: librerouteros_s9xxx_official_${{ env.PACKAGED_OUTPUTDATE }}
        files: ${{ env.PACKAGED_OUTPUTPATH }}/*
        body: |
          This is librerouteros firmware for Amlogic S9xxx STB
          * Firmware information
          Default IP: 192.168.1.1
          Default username: root
          Default password: password
          Default WIFI name: librerouteros
          Default WIFI password: none
          Install command: librerouteros-install
          Update command: librerouteros-update

